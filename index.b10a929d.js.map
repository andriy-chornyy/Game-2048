{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar startButton = document.querySelector(\".start\");\nvar gameScore = document.querySelector(\".game-score\");\nvar gameStatus = document.querySelector(\".message-container\");\nvar table = document.querySelector(\".game-field\");\nvar rows = table.rows;\nvar score = 0;\nvar startY;\nvar startX;\nvar moveY;\nvar moveX;\nvar gameField = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nfunction resetTheGame() {\n    score = 0;\n    for(var row = 0; row < gameField.length; row++)for(var cell = 0; cell < gameField.length; cell++)gameField[row][cell] = 0;\n}\nfunction changingDivMessage(value) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = gameStatus.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var child = _step.value;\n            if (child.classList.contains(\"message-\".concat(value))) child.classList.remove(\"hidden\");\n            else child.classList.add(\"hidden\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction randomNumber() {\n    var randomNum = Math.floor(Math.random() * 9 + 1);\n    var randomRowIndex = Math.floor(Math.random() * 4);\n    var randomColumnIndex = Math.floor(Math.random() * 4);\n    while(gameField[randomRowIndex][randomColumnIndex] !== 0){\n        randomRowIndex = Math.floor(Math.random() * 4);\n        randomColumnIndex = Math.floor(Math.random() * 4);\n    }\n    if (randomNum < 2) randomNum = 4;\n    else randomNum = 2;\n    gameField[randomRowIndex][randomColumnIndex] = randomNum;\n}\nfunction renderGameField() {\n    gameScore.innerText = score;\n    for(var x = 0; x < gameField.length; x++){\n        for(var y = 0; y < gameField.length; y++)if (gameField[x][y] !== 0) {\n            rows[x].children[y].className = \"field-cell\";\n            rows[x].children[y].innerText = gameField[x][y];\n            if (gameField[x][y] > 2048) rows[x].children[y].classList.add(\"field-cell--2048\");\n            else rows[x].children[y].classList.add(\"field-cell--\".concat(gameField[x][y]));\n        } else {\n            rows[x].children[y].className = \"field-cell\";\n            rows[x].children[y].innerText = \"\";\n        }\n    }\n}\nfunction checkRowForGameOver(field) {\n    var rowStatus = false;\n    field.map(function(r) {\n        return r.filter(function(digit) {\n            for(var i = 0; i < gameField.length; i++)if (r[i] === r[i + 1] || r[i] === 0) {\n                rowStatus = true;\n                return;\n            }\n        });\n    });\n    return rowStatus;\n}\nfunction gameOver() {\n    var columns = [];\n    for(var r = 0; r < gameField.length; r++){\n        var transformToColumn = [\n            gameField[0][r],\n            gameField[1][r],\n            gameField[2][r],\n            gameField[3][r]\n        ];\n        columns.push(transformToColumn);\n    }\n    var checkRows = checkRowForGameOver(gameField);\n    var checkColumns = checkRowForGameOver(columns);\n    if (!checkRows && !checkColumns) {\n        changingDivMessage(\"lose\");\n        return false;\n    }\n    return true;\n}\nfunction slidingSum(row, key) {\n    var fieldRow = row.filter(function(digit) {\n        return digit !== 0;\n    });\n    if (key === \"ArrowRight\" || key === \"ArrowDown\") fieldRow.reverse();\n    for(var cell = 0; cell < fieldRow.length; cell++)if (fieldRow[cell] === fieldRow[cell + 1]) {\n        fieldRow[cell] *= 2;\n        fieldRow[cell + 1] = 0;\n        score += fieldRow[cell];\n    }\n    fieldRow = fieldRow.filter(function(digit) {\n        return digit !== 0;\n    });\n    while(fieldRow.length < gameField.length)fieldRow.push(0);\n    return key === \"ArrowRight\" || key === \"ArrowDown\" ? fieldRow.reverse() : fieldRow;\n}\nfunction moveLeftAndRight(key) {\n    for(var r = 0; r < gameField.length; r++){\n        var row = gameField[r];\n        row = slidingSum(row, key);\n        gameField[r] = row;\n    }\n}\nfunction moveUpAndDown(key) {\n    for(var r = 0; r < gameField.length; r++){\n        var transformRow = [\n            gameField[0][r],\n            gameField[1][r],\n            gameField[2][r],\n            gameField[3][r]\n        ];\n        transformRow = slidingSum(transformRow, key);\n        for(var c = 0; c < gameField.length; c++)gameField[c][r] = transformRow[c];\n    }\n}\nfunction simulateKeyPress(code) {\n    document.dispatchEvent(new KeyboardEvent(\"keyup\", {\n        code: code\n    }));\n}\nstartButton.addEventListener(\"click\", function(e) {\n    if (startButton.classList.contains(\"start\")) {\n        startButton.classList.remove(\"start\");\n        startButton.classList.add(\"restart\");\n        startButton.innerText = \"restart\";\n    }\n    changingDivMessage(\"restart\");\n    resetTheGame();\n    randomNumber();\n    randomNumber();\n    renderGameField();\n});\ndocument.addEventListener(\"keyup\", function(key) {\n    var lose = document.querySelector(\".message-lose\");\n    if (startButton.classList.contains(\"start\")) return;\n    if (!lose.classList.contains(\"hidden\")) return;\n    var copyTableGame = JSON.parse(JSON.stringify(gameField));\n    switch(key.code){\n        case \"ArrowLeft\":\n            moveLeftAndRight(key.code);\n            break;\n        case \"ArrowRight\":\n            moveLeftAndRight(key.code);\n            break;\n        case \"ArrowUp\":\n            moveUpAndDown(key.code);\n            break;\n        case \"ArrowDown\":\n            moveUpAndDown(key.code);\n            break;\n    }\n    if (JSON.stringify(copyTableGame) === JSON.stringify(gameField)) return;\n    randomNumber();\n    renderGameField();\n    var loseStatus = gameOver();\n    if (!loseStatus) changingDivMessage(\"lose\");\n});\ndocument.addEventListener(\"touchstart\", function(e) {\n    startY = e.touches[0].clientY;\n    startX = e.touches[0].clientX;\n});\ndocument.addEventListener(\"touchmove\", function(e) {\n    moveY = e.touches[0].clientY;\n    moveX = e.touches[0].clientX;\n});\ndocument.addEventListener(\"touchend\", function(e) {\n    var endY = Math.abs(startY - moveY);\n    var endX = Math.abs(startX - moveX);\n    if (startY - moveY < 0 && endY > endX) simulateKeyPress(\"ArrowDown\");\n    if (startY - moveY > 0 && endY > endX) simulateKeyPress(\"ArrowUp\");\n    if (startX - moveX < 0 && endX > endY) simulateKeyPress(\"ArrowRight\");\n    if (startX - moveX > 0 && endX > endY) simulateKeyPress(\"ArrowLeft\");\n});\n\n//# sourceMappingURL=index.b10a929d.js.map\n","'use strict';\n\nconst startButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst gameStatus = document.querySelector('.message-container');\nconst table = document.querySelector('.game-field');\nconst rows = table.rows;\nlet score = 0;\nlet startY;\nlet startX;\nlet moveY;\nlet moveX;\n\nconst gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction resetTheGame() {\n  score = 0;\n\n  for (let row = 0; row < gameField.length; row++) {\n    for (let cell = 0; cell < gameField.length; cell++) {\n      gameField[row][cell] = 0;\n    }\n  }\n}\n\nfunction changingDivMessage(value) {\n  for (const child of gameStatus.children) {\n    if (child.classList.contains(`message-${value}`)) {\n      child.classList.remove('hidden');\n    } else {\n      child.classList.add('hidden');\n    }\n  }\n}\n\nfunction randomNumber() {\n  let randomNum = Math.floor(Math.random() * (10 - 1) + 1);\n  let randomRowIndex = Math.floor(Math.random() * 4);\n  let randomColumnIndex = Math.floor(Math.random() * 4);\n\n  while (gameField[randomRowIndex][randomColumnIndex] !== 0) {\n    randomRowIndex = Math.floor(Math.random() * 4);\n    randomColumnIndex = Math.floor(Math.random() * 4);\n  }\n\n  if (randomNum < 2) {\n    randomNum = 4;\n  } else {\n    randomNum = 2;\n  }\n\n  gameField[randomRowIndex][randomColumnIndex] = randomNum;\n}\n\nfunction renderGameField() {\n  gameScore.innerText = score;\n\n  for (let x = 0; x < gameField.length; x++) {\n    for (let y = 0; y < gameField.length; y++) {\n      if (gameField[x][y] !== 0) {\n        rows[x].children[y].className = 'field-cell';\n        rows[x].children[y].innerText = gameField[x][y];\n\n        if (gameField[x][y] > 2048) {\n          rows[x].children[y].classList.add(`field-cell--2048`);\n        } else {\n          rows[x].children[y].classList.add(`field-cell--${gameField[x][y]}`);\n        }\n      } else {\n        rows[x].children[y].className = 'field-cell';\n        rows[x].children[y].innerText = '';\n      }\n    }\n  }\n}\n\nfunction checkRowForGameOver(field) {\n  let rowStatus = false;\n\n  field.map((r) => {\n    return r.filter((digit) => {\n      for (let i = 0; i < gameField.length; i++) {\n        if (r[i] === r[i + 1] || r[i] === 0) {\n          rowStatus = true;\n\n          return;\n        }\n      }\n    });\n  });\n\n  return rowStatus;\n}\n\nfunction gameOver() {\n  const columns = [];\n\n  for (let r = 0; r < gameField.length; r++) {\n    const transformToColumn = [\n      gameField[0][r],\n      gameField[1][r],\n      gameField[2][r],\n      gameField[3][r],\n    ];\n\n    columns.push(transformToColumn);\n  }\n\n  const checkRows = checkRowForGameOver(gameField);\n  const checkColumns = checkRowForGameOver(columns);\n\n  if (!checkRows && !checkColumns) {\n    changingDivMessage('lose');\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction slidingSum(row, key) {\n  let fieldRow = row.filter((digit) => digit !== 0);\n\n  if (key === 'ArrowRight' || key === 'ArrowDown') {\n    fieldRow.reverse();\n  }\n\n  for (let cell = 0; cell < fieldRow.length; cell++) {\n    if (fieldRow[cell] === fieldRow[cell + 1]) {\n      fieldRow[cell] *= 2;\n      fieldRow[cell + 1] = 0;\n      score += fieldRow[cell];\n    }\n  }\n\n  fieldRow = fieldRow.filter((digit) => digit !== 0);\n\n  while (fieldRow.length < gameField.length) {\n    fieldRow.push(0);\n  }\n\n  return key === 'ArrowRight' || key === 'ArrowDown'\n    ? fieldRow.reverse()\n    : fieldRow;\n}\n\nfunction moveLeftAndRight(key) {\n  for (let r = 0; r < gameField.length; r++) {\n    let row = gameField[r];\n\n    row = slidingSum(row, key);\n    gameField[r] = row;\n  }\n}\n\nfunction moveUpAndDown(key) {\n  for (let r = 0; r < gameField.length; r++) {\n    let transformRow = [\n      gameField[0][r],\n      gameField[1][r],\n      gameField[2][r],\n      gameField[3][r],\n    ];\n\n    transformRow = slidingSum(transformRow, key);\n\n    for (let c = 0; c < gameField.length; c++) {\n      gameField[c][r] = transformRow[c];\n    }\n  }\n}\n\nfunction simulateKeyPress(code) {\n  document.dispatchEvent(new KeyboardEvent('keyup', { code: code }));\n}\n\nstartButton.addEventListener('click', (e) => {\n  if (startButton.classList.contains('start')) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.innerText = 'restart';\n  }\n\n  changingDivMessage('restart');\n  resetTheGame();\n  randomNumber();\n  randomNumber();\n  renderGameField();\n});\n\ndocument.addEventListener('keyup', (key) => {\n  const lose = document.querySelector('.message-lose');\n\n  if (startButton.classList.contains('start')) {\n    return;\n  }\n\n  if (!lose.classList.contains('hidden')) {\n    return;\n  }\n\n  const copyTableGame = JSON.parse(JSON.stringify(gameField));\n\n  switch (key.code) {\n    case 'ArrowLeft':\n      moveLeftAndRight(key.code);\n      break;\n\n    case 'ArrowRight':\n      moveLeftAndRight(key.code);\n      break;\n\n    case 'ArrowUp':\n      moveUpAndDown(key.code);\n      break;\n\n    case 'ArrowDown':\n      moveUpAndDown(key.code);\n      break;\n  }\n\n  if (JSON.stringify(copyTableGame) === JSON.stringify(gameField)) {\n    return;\n  }\n\n  randomNumber();\n\n  renderGameField();\n\n  const loseStatus = gameOver();\n\n  if (!loseStatus) {\n    changingDivMessage('lose');\n  }\n});\n\ndocument.addEventListener('touchstart', (e) => {\n  startY = e.touches[0].clientY;\n  startX = e.touches[0].clientX;\n});\n\ndocument.addEventListener('touchmove', (e) => {\n  moveY = e.touches[0].clientY;\n  moveX = e.touches[0].clientX;\n});\n\ndocument.addEventListener('touchend', (e) => {\n  const endY = Math.abs(startY - moveY);\n  const endX = Math.abs(startX - moveX);\n\n  if (startY - moveY < 0 && endY > endX) {\n    simulateKeyPress('ArrowDown');\n  }\n\n  if (startY - moveY > 0 && endY > endX) {\n    simulateKeyPress('ArrowUp');\n  }\n\n  if (startX - moveX < 0 && endX > endY) {\n    simulateKeyPress('ArrowRight');\n  }\n\n  if (startX - moveX > 0 && endX > endY) {\n    simulateKeyPress('ArrowLeft');\n  }\n});\n"],"names":["startY","startX","moveY","moveX","startButton","document","querySelector","gameScore","gameStatus","rows","table","score","gameField","changingDivMessage","value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","children","Symbol","iterator","next","done","child","classList","contains","concat","remove","add","err","return","randomNumber","randomNum","Math","floor","random","randomRowIndex","randomColumnIndex","renderGameField","innerText","x","length","y","className","checkRowForGameOver","field","rowStatus","map","r","filter","digit","i","slidingSum","row","key","fieldRow","reverse","cell","push","simulateKeyPress","code","dispatchEvent","KeyboardEvent","addEventListener","e","resetTheGame","lose","copyTableGame","JSON","parse","stringify","moveLeftAndRight","moveUpAndDown","transformRow","c","gameOver","columns","transformToColumn","checkRows","checkColumns","touches","clientY","clientX","endY","abs","endX"],"version":3,"file":"index.b10a929d.js.map"}